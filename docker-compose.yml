version: "2.4"
services:
  db:
    image: mariadb:latest
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s
    env_file:
      - config/mysql.env
      - config/mysql_root.env
    expose:
      - "3306"
    volumes:
      - db-data:/var/lib/mysql # To override random volume name
    networks:
      - backend
    restart: on-failure

  app:
    build: ./back
    env_file:
      - config/flask.env
      - config/mysql.env
      - config/local.env
    links:
      - db
    ports:
      - "5000:5000"
    expose:
      - "5000"
    volumes:
      - ./back:/app/:ro
      - user-pictures:/data # To store users pictures in persistent storage
    networks:
      - backend
      - frontend
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://app:5000"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s
    entrypoint: ["flask", "run", "--host=0.0.0.0"] # To use the dev server for debug

  tests_back:
    build: ./back/tests
    env_file:
      - config/flask.env
    links:
      - app
    volumes:
      - ./back/tests:/tests
      - user-pictures:/data:ro # To check uploads/deletions
    networks:
      - frontend

  front:
    build: ./front
    env_file: config/node.env
    expose:
      - "3000"
    user: node
    working_dir: /home/node/app
    ports:
      - "3000:3000"
    links:
      - app
    volumes:
      - ./front/public:/home/node/app/public
      - ./front/src:/home/node/app/src
    command: "npm start"
    networks:
      - frontend
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://front:3000"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s

  flutter:
    build: ./flutter
    env_file: config/flutter.env
    expose:
      - "3000"
    working_dir: /myapp
    ports:
      - "3000:3000"
    volumes:
      - ./flutter/myapp:/myapp
    # links:
    #   - app
    command: "flutter run"
    networks:
      - frontend
    restart: on-failure
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://front:3000"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 20s

networks:
  backend:
  frontend:

volumes:
  user-pictures:
  db-data:
  